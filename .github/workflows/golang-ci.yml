name: golang-ci

on:
  workflow_call: # https://docs.github.com/actions/using-workflows/reusing-workflows#using-inputs-and-secrets-in-a-reusable-workflow

permissions:
  contents: read

jobs:
  golang-ci:
    name: glang-ci
    strategy:
      matrix:
        go:
         - '^1.18'
         - '1.18.10'
        os:
          - macos-latest
          - windows-latest
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go SDK
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
          cache: false
      - name: Print env info
        run: |
          go env
          go version

      - name: Run go install check
        run: go get -t -v ./...

      - name: Run go build
        run: go build -v ./...

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          # version: v1.50.0 for go verison 1.19+
          # version: v1.45.2 for go verison 1.18+
          # version: v1.42.1 for go verison 1.17+
          # version: v1.41.0 for go verison 1.16+
          version: v1.53.2

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          #
          # Note: By default, the `.golangci.yml` file should be at the root of the repository.
          # The location of the configuration file can be changed by using `--config=`
          # args: --timeout=30m --config=/my/path/.golangci.yml --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true, then all caching functionality will be completely disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

          # Optional: The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
          # install-mode: "goinstall"

      - name: Run test
        run: go test -v ./...

      - name: Run test benchmark
        run: go test -run none -bench . -benchmem -v ./...

      - name: Run test coverage
        run: |
          go test -cover -coverprofile coverage.txt -covermode count -coverpkg ./... -tags test -v ./...
          go tool cover -func coverage.txt
